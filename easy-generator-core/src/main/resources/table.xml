<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xmomen.generator.mapping.TableMapper" >
    <select id="getTableInfoByMySQL"
            resultType="com.xmomen.generator.model.ColumnInfo"
            parameterType="java.util.HashMap">
        select
        t.table_schema tableSchema,
        t.table_name tableName,
        t.column_comment columnComment,
        t.CHARACTER_maximum_LENGTH length,
        t.numeric_scale scale,
        case column_key when 'PRI' then 1 else 0 end as isPrimaryKey,
        upper(t.data_type) jdbcType,
        t.column_name actualColumnName,
        t.column_default defaultValue,
        t.is_nullable nullable
        from information_schema.columns t
        <where>
            table_name IN
            <foreach collection="config.tables" item="item" open="(" separator="," close=")">
                #{item.tableName}
            </foreach>
        </where>
    </select>

    <select id="getTableInfoByOracle"
            resultType="com.xmomen.generator.model.ColumnInfo"
            parameterType="java.util.HashMap">
        SELECT c.table_name tableName,
                c.column_name actualColumnName,
                c.data_type jdbcType,
                c.data_length length,
                c.data_precision,
                c.data_scale scale,
                c.nullable,
                c.data_default defaultValue,
                case
                when ucc.column_name = c.COLUMN_NAME then
                1
                else
                0
                end as isPrimaryKey,
                c.num_distinct,
                cm.comments columnComment
        FROM user_tab_columns c
            left join user_col_comments cm on c.column_name = cm.column_name
                and c.table_name = cm.table_name
            left join user_constraints con on con.constraint_type = 'P'
                and con.table_name = c.table_name
            left join user_cons_columns ucc on ucc.table_name = c.table_name
                and ucc.column_name = c.column_name
                and con.constraint_name = ucc.constraint_name
        <where>
            UPPER(c.TABLE_NAME) IN
            <foreach collection="config.tables" item="item" open="(" separator="," close=")">
                UPPER(#{item.tableName})
            </foreach>
        </where>
    </select>

    <select id="getTableInfoByPGSQL"
            resultType="com.xmomen.generator.model.ColumnInfo"
            parameterType="java.util.HashMap">
        SELECT C
        .relname AS TABLE_NAME,
        col_description ( A.attrelid, A.attnum ) AS column_comment,
        UPPER ( T.typname ) AS jdbc_type,
        cc.character_maximum_length AS LENGTH,
        cc.numeric_precision data_precision,
        cc.numeric_scale AS SCALE,
        A.attname AS actual_column_name,
        cc.column_default default_value,
        CASE
        WHEN pc.pk_name IS NOT NULL THEN
        'Y' ELSE'N'
        END AS is_primary_key,
        CASE
        WHEN A.attnotnull = 't' THEN
        'Y' ELSE'N'
        END AS NULLABLE
        FROM
        pg_attribute
        AS A INNER JOIN pg_class AS C ON A.attrelid = C.oid
        LEFT JOIN information_schema.COLUMNS AS cc ON cc.TABLE_NAME = C.relname
        AND cc.COLUMN_NAME = A.attname
        LEFT JOIN pg_type T ON A.atttypid = T.oid
        LEFT JOIN (
        SELECT
        pg_class.relname,
        pg_attr.attname AS colname,
        pg_constraint.conname AS pk_name
        FROM
        pg_constraint
        INNER JOIN pg_class ON pg_constraint.conrelid = pg_class.oid
        INNER JOIN pg_attribute pg_attr ON pg_attr.attrelid = pg_class.oid
        AND pg_attr.attnum = pg_constraint.conkey [ 1 ]
        WHERE
        pg_constraint.contype = 'p'
        ) pc ON pc.relname = C.relname
        AND pc.colname = cc.COLUMN_NAME
        <where>
            a.attnum > 0 and c.relname IN
            <foreach collection="config.tables" item="item" open="(" separator="," close=")">
                #{item.tableName}
            </foreach>
        </where>
    </select>

</mapper>